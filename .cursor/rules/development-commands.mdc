---
globs: "*.py,*.md,*.txt,*.env*"
---
# Development Commands Reference

## Running the Application
```bash
# Development mode with auto-reload
uvicorn app.main:app --reload --host 0.0.0.0 --port 8000

# Production mode
uvicorn app.main:app --host 0.0.0.0 --port 8000 --workers 4
```

## Environment Setup
```bash
# Install dependencies
pip install -r requirements.txt

# Create .env file from example
cp .env.example .env

# Generate secure secret key
python -c "import secrets; print(secrets.token_urlsafe(32))"
```

## API Documentation
Once running, access:
- Swagger UI: http://localhost:8000/docs
- ReDoc: http://localhost:8000/redoc
- OpenAPI Schema: http://localhost:8000/openapi.json

## Database Management
- Database file: `app.db` (SQLite)
- Tables are created automatically on startup
- To reset database: delete `app.db` and restart

## Key Dependencies
- **FastAPI**: Web framework
- **SQLModel**: ORM combining SQLAlchemy + Pydantic
- **python-jose[cryptography]**: JWT handling
- **passlib[bcrypt]**: Password hashing
- **pydantic-settings**: Configuration management

## Quick Testing Commands
```bash
# Register a user
curl -X POST "http://localhost:8000/auth/register" \
  -H "Content-Type: application/json" \
  -d '{"username": "testuser", "email": "test@example.com", "password": "testpass123", "full_name": "Test User"}'

# Login
curl -X POST "http://localhost:8000/auth/token" \
  -H "Content-Type: application/x-www-form-urlencoded" \
  -d "username=testuser&password=testpass123"

# Access protected endpoint
curl -X GET "http://localhost:8000/users/me" \
  -H "Authorization: Bearer YOUR_TOKEN_HERE"
```